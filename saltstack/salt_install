#!/bin/bash
#
# Perform interactive install of SaltStack

__ScriptName="salt_install"
install_type=""
salt_master=""
minion_id=""
separator="\033[35m===>\033[0m"
salt_etc_dir="/etc/salt"

usage() {
  cat << EOT

  Usage :  ${__ScriptName} [options] <install-type>

  Installation types:
    - salt-master
    - salt-minion

  Examples:
    - ${__ScriptName} -r salt-master

  Options:
  -h  Display this message
  -r  Set role
  -m  Set minion's master
  -i  Set minion's id

EOT
}

while getopts "hrmi:" option
do
  case "${option}" in
    h)
      usage
      exit 0
      ;;
    r)
      if [[ $OPTARG == "salt-master" ]] || [[ $OPTARG == "salt-minion" ]]; then
        install_type="${OPTARG}"
        break
      else
        echo "Role must be 'salt-master' or 'salt-minion'"
        exit 1
      fi
      ;;
    m)
      salt_master="${OPTARG}"
      ;;
    i)
      minion_id="${OPTARG}"
      ;;
  esac
done

echo -e "${separator} add SaltStack PPA"

if grep ^ /etc/apt/sources.list /etc/apt/sources.list.d/* | grep saltstack > /dev/null; then
  echo "SaltStack PPA is already in sources list"
else
  add-apt-repository -y ppa:saltstack/salt
fi

apt-get update

echo -e "${separator} install ${install_type}"

apt-get install ${install_type} -y

echo -e "${separator} add ${install_type} service to update-rc.d"

update-rc.d ${install_type} defaults

if [[ ${install_type} -eq "salt-minion" ]]; then
  if [[ ${salt_master} -neq "" ]]; then
    echo -e "${separator} setting salt-minion's master to ${salt_master}"

    [ ! -d ${salt_etc_dir}/minion.d ] && mkdir -p ${salt_etc_dir}/minion.d

    cat <<_eof > ${salt_etc_dir}/minion.d/99-master-address.conf
master: ${salt_master}
_eof

  fi

  if [[ ${minion_id} -neq "" ]]; then
    echo -e "${separator} salt-minion's id to ${minion_id}"

    [ ! -d ${salt_etc_dir} ] && mkdir -p ${salt_etc_dir
    echo ${minion_id} > ${salt_etc_dir}/minion_id}
  fi
fi}

echo -e "${separator} start ${install_type}"

if ps ax | grep -v grep | grep ${install_type} > /dev/null; then
  echo "${install_type} is already running, restarting"
  service ${install_type} restart
else
  echo "starting ${install_type}"
  service ${install_type} start
fi
